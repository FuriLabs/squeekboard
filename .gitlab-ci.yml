image: $CI_REGISTRY/world/phosh/phosh/debian:v0.0.20211208

stages:
  - build
  - test

before_script:
  - apt-get -y update
  - apt-get -y install ca-certificates

build_docs:
  stage: build
  artifacts:
    paths:
      - _build
  script:
      - apt-get -y install python3-pip python3-sphinx
      - pip3 install recommonmark
      - ./doc/build.sh _build
  except:
    variables:
      - $PKG_ONLY == "1"

build_meson:
  stage: build
  artifacts:
    paths:
      - _build
    expire_in: 3h
  script:
    - apt-get -y build-dep .
    - meson . _build/ -Ddepdatadir=/usr/share --werror
    - ninja -C _build install
  except:
    variables:
      - $PKG_ONLY == "1"

build_deb:
  stage: build
  artifacts:
    paths:
      - "*.deb"
  script:
      - rm -f ../*.deb
      - apt-get -y build-dep .
      - apt-get -y install devscripts
      - debuild -i -us -uc -b
      - cp ../*.deb .

build_deb:arm64:
  image: debian:bookworm
  tags:
      - aarch64
  stage: build
  artifacts:
    paths:
      - "*.deb"
  script:
      - rm -f ../*.deb
      - apt-get -y build-dep .
      - apt-get -y install devscripts
      - debuild -i -us -uc -b
      - cp ../*.deb .

test_lintian:
  stage: test
  dependencies:
    - build_deb
  script:
    - apt-get -y install lintian
    - lintian *.deb
  except:
    variables:
      - $PKG_ONLY == "1"

test:
  stage: test
  needs:
    - build_meson
  script:
    - apt-get -y build-dep .
    - apt-get -y install clang-tidy
    - ninja -C _build test
    - tools/style-check _build
  except:
    variables:
      - $PKG_ONLY == "1"

check_release:
  stage: test
  only:
    refs:
      - master
  script:
    - apt-get -y install git python3
    - (head -n 1 ./debian/changelog && git tag) | ./debian/check_release.py
  except:
    variables:
      - $PKG_ONLY == "1"
