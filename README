eekboard - an easy to use virtual keyboard library -*- outline -*-

eekboard is a virtual keyboard software package which ships with a
standalone virtual keyboard application ("eekboard"), and a library to
create keyboard-like UI ("libeek").

* Requirements

  * GLib2, GTK, GConf2, PangoCairo, libxklavier, libfakekey, CSPI
  * Clutter (optional)
  * Clutter-Gtk (optional)
  * Vala (optional)
  * gobject-introspection (optional)

* How to test

Build from git repo:

  $ git clone git://github.com/ueno/eekboard.git
  $ cd eekboard
  $ ./autogen.sh --prefix=/usr --enable-gtk-doc
  $ ./configure
  $ make

Dump the current system layout to an XML file:

  $ ./tests/eek-example-xml -d > keyboard.xml

Load the XML file and show a keyboard created from it on the display:

  $ ./tests/eek-example-xml -l keyboard.xml

Start D-Bus server:

  $ ./src/eekboard-server &

Access to the D-Bus server:

  $ ./src/eekboard-client --set-keyboard keyboard.xml
  $ ./src/eekboard-client --show
  $ ./src/eekboard-client --listen # press some keys on the keyboard
  KeyPressed XXXXX
  KeyReleased XXXXX
  $ ./src/eekboard-client --set-group 1
  $ ./src/eekboard-client --press-key 65
  $ ./src/eekboard-client --release-key 65

Listen and follow the system events:

NOTE: eekboard-system-client is now being heavily developed and it may
behave wrongly.  Make sure to close windows where you are doing any
important work, before running eekboard.

  $ ./src/eekboard-system-client \
      --listen-keyboard \
      --listen-focus \
      --listen-keystroke \
      --generate-key-event

Where --listen-keyboard is to monitor system keyboard state/config
change, --listen-focus is to track focus change, --listen-keystroke is
to track keystroke events, and --generate-key-event is to generate X
key events on virtual key-press/key-release events.

* Documentation

See file:docs/reference/eek/html/index.html
